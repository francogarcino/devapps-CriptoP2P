import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
	id 'war'
	id 'org.springframework.boot' version '3.0.5'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'org.jetbrains.kotlin.jvm' version '1.7.22'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.7.22'
	id 'org.jetbrains.kotlin.plugin.jpa' version '1.7.22'
	id "org.sonarqube" version "3.5.0.2730"
}

group = 'ar.edu.unq.desapp.grupog'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
	implementation 'org.jetbrains.kotlin:kotlin-reflect'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

sonarqube {
  properties {
    property "sonar.projectKey", "francogarcino_devapps-CriptoP2P"
    property "sonar.organization", "francogarcino"
	property "sonar.host.url", "https://sonarcloud.io"
	property "sonar.projectName", "devapps-CriptoP2P"
	property "sonar.login", "2a3fabd2618e5d914324b42a00da48b7d55c0897"
	property "sonar.kotlin.compiler.version", "1.7.22"
  }
}

tasks.withType(KotlinCompile) {
	kotlinOptions {
		freeCompilerArgs = ['-Xjsr305=strict']
		jvmTarget = '17'
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
